DOMAIN=harena-logger
# DOMAIN=local.dockertoolbox.tiangolo.com
# DOMAIN=localhost.tiangolo.com
# DOMAIN=dev.harenaloggerurl.com

STACK_NAME=harenaloggerurl-com

TRAEFIK_PUBLIC_NETWORK=traefik-public
TRAEFIK_TAG=harenaloggerurl.com
TRAEFIK_PUBLIC_TAG=HARENA_LOGGER_TRAEFIK

DOCKER_IMAGE_BACKEND=harena-logger-backend
DOCKER_IMAGE_ACTIONWORKER=harena-logger-actionworker
DOCKER_IMAGE_SYSTEMWORKER=harena-logger-systemworker

DOCKER_IMAGE_FRONTEND=harena-logger-frontend

# Backend
BACKEND_CORS_ORIGINS=["http://localhost", "http://localhost:10010", "https://localhost:10010", "http://localhost:4200", "http://localhost:3000", "http://localhost:8080", "https://localhost", "https://localhost:4200", "https://localhost:3000", "https://localhost:8080", "http://dev.harenaloggerurl.com", "https://stag.harenaloggerurl.com", "https://harenaloggerurl.com", "http://local.dockertoolbox.tiangolo.com", "http://localhost.tiangolo.com"]
PROJECT_NAME=harena-logger
SECRET_KEY=1bf8c31d9cc5ffec1772b6e279eb595d65164861293aad6b543a72957d2de68b
FIRST_SUPERUSER=logger@harenaloggerurl.com
FIRST_SUPERUSER_PASSWORD=harena
SMTP_TLS=True
SMTP_PORT=587
SMTP_HOST=
SMTP_USER=
SMTP_PASSWORD=
EMAILS_FROM_EMAIL=info@harenaloggerurl.com

USERS_OPEN_REGISTRATION=False

SENTRY_DSN=https://4545043b2c46405bafd287ca4773b277@o1000618.ingest.sentry.io/5960001

# Flower
FLOWER_BASIC_AUTH=logger:harena

# Postgres
POSTGRES_SERVER=db
POSTGRES_USER=postgres
POSTGRES_PASSWORD=harena
POSTGRES_DB=app

# PgAdmin
PGADMIN_LISTEN_PORT=5050
PGADMIN_DEFAULT_EMAIL=logger@harenaloggerurl.com
PGADMIN_DEFAULT_PASSWORD=harena

# Mongo
# MONGODB_REPLICA_SET_MODE: The replication mode. Possible values primary/secondary/arbiter. No defaults.
# MONGODB_REPLICA_SET_NAME: MongoDB® replica set name. Default: replicaset
# MONGODB_PORT_NUMBER: The port each MongoDB® will use. Default: 27017
# MONGODB_INITIAL_PRIMARY_HOST: MongoDB® initial primary host, once the replicaset is created any node can be eventually promoted to be the primary. No defaults.
# MONGODB_INITIAL_PRIMARY_PORT_NUMBER: MongoDB® initial primary node port, as seen by other nodes. Default: 27017
# MONGODB_ADVERTISED_HOSTNAME: MongoDB® advertised hostname. No defaults. It is recommended to pass this environment variable if you experience issues with ephemeral IPs. Setting this env var makes the nodes of the replica set to be configured with a hostname instead of the machine IP.
# MONGODB_REPLICA_SET_KEY: MongoDB® replica set key. Length should be greater than 5 characters and should not contain any special characters. Required for all nodes. No default.
# MONGODB_ROOT_USER: MongoDB® root user name. Default: root.
# MONGODB_ROOT_PASSWORD: MongoDB® root password. No defaults. Only for primary node.
# MONGODB_INITIAL_PRIMARY_ROOT_PASSWORD: MongoDB® initial primary root password. No defaults. Only for secondaries and arbiter nodes.
MONGODB_ROOT_USER=logger
MONGODB_ROOT_PASSWORD=harena
MONGODB_INITIAL_PRIMARY_ROOT_PASSWORD=harena


# Mongo Express
# ME_CONFIG_MONGODB_URL`           | `mongodb://admin:pass@localhost:27017/db?ssl=false`
# ME_CONFIG_MONGODB_ENABLE_ADMIN`  | `false`         | Enable administrator access. Send strings: `"true"` or `"false"`.
# ME_CONFIG_MONGODB_AUTH_DATABASE` | `db`            | Database name (only needed if `ENABLE_ADMIN` is `"false"`).
# ME_CONFIG_MONGODB_AUTH_USERNAME` | `admin`         | Database username (only needed if `ENABLE_ADMIN` is `"false"`).
# ME_CONFIG_MONGODB_AUTH_PASSWORD` | `pass`          | Database password (only needed if `ENABLE_ADMIN` is `"false"`).
# ME_CONFIG_SITE_BASEURL`          | `/`             | Set the express baseUrl to ease mounting at a subdirectory. Remember to include a leading and trailing slash.
# ME_CONFIG_SITE_COOKIESECRET`     | `cookiesecret`  | String used by [cookie-parser middleware](https://www.npmjs.com/package/cookie-parser) to sign cookies.
# ME_CONFIG_SITE_SESSIONSECRET`    | `sessionsecret` | String used to sign the session ID cookie by [express-session middleware](https://www.npmjs.com/package/express-session).
# ME_CONFIG_BASICAUTH_USERNAME`    | ``              | mongo-express web login name. Sending an empty string will disable basic authentication.
# ME_CONFIG_BASICAUTH_PASSWORD`    | ``              | mongo-express web login password.
# ME_CONFIG_REQUEST_SIZE`          | `100kb`         | Used to configure maximum mongo update payload size. CRUD operations above this size will fail due to restrictions in [body-parser](https://www.npmjs.com/package/body-parser).
ME_CONFIG_MONGODB_URL=mongodb://logger:harena@mongo:27017/logger-dev?ssl=false



# Kafka
# ALLOW_PLAINTEXT_LISTENER: Allow to use the PLAINTEXT listener. Default: no.
# KAFKA_INTER_BROKER_USER: Kafka inter broker communication user. Default: admin. Default: user.
# KAFKA_INTER_BROKER_PASSWORD: Kafka inter broker communication password. Default: bitnami.
# KAFKA_CERTIFICATE_PASSWORD: Password for certificates. No defaults.
# KAFKA_HEAP_OPTS: Kafka's Java Heap size. Default: -Xmx1024m -Xms1024m.
# KAFKA_ZOOKEEPER_PROTOCOL: Authentication protocol for Zookeeper connections. Allowed protocols: PLAINTEXT, SASL, SSL, and SASL_SSL. Defaults: PLAINTEXT.
# KAFKA_ZOOKEEPER_USER: Kafka Zookeeper user for SASL authentication. No defaults.
# KAFKA_ZOOKEEPER_PASSWORD: Kafka Zookeeper user password for SASL authentication. No defaults.
# KAFKA_ZOOKEEPER_TLS_KEYSTORE_PASSWORD: Kafka Zookeeper keystore file password and key password. No defaults.
# KAFKA_ZOOKEEPER_TLS_TRUSTSTORE_PASSWORD: Kafka Zookeeper truststore file password. No defaults.
# KAFKA_ZOOKEEPER_TLS_VERIFY_HOSTNAME: Verify Zookeeper hostname on TLS certificates. Defaults: true.
# KAFKA_ZOOKEEPER_TLS_TYPE: Choose the TLS certificate format to use. Allowed values: JKS, PEM. Defaults: JKS.
# KAFKA_CFG_SASL_ENABLED_MECHANISMS: Allowed mechanism when using SASL either for clients, inter broker, or zookeeper comunications. Allowed values: PLAIN, SCRAM-SHA-256, SCRAM-SHA-512 or a comma separated combination of those values. Default: PLAIN,SCRAM-SHA-256,SCRAM-SHA-512
# KAFKA_CFG_SASL_MECHANISM_INTER_BROKER_PROTOCOL: SASL mechanism to use for inter broker communications. No defaults.
# KAFKA_TLS_CLIENT_AUTH: Configures kafka brokers to request client authentication. Allowed values: required, requested, none. Defaults: required.
# KAFKA_TLS_TYPE: Choose the TLS certificate format to use. Allowed values: JKS, PEM. Defaults: JKS.
# KAFKA_CLIENT_USERS: Additional users to KAFKA_CLIENT_USER that will be created into Zookeeper when using SASL_SCRAM for client communications. Separated by commas. Default: user
# KAFKA_CLIENT_PASSWORDS: Passwords for the users specified atKAFKA_CLIENT_USERS. Separated by commas. Default: bitnami
# KAFKA_CFG_MAX_PARTITION_FETCH_BYTES: The maximum amount of data per-partition the server will return. Default: 1048576
# KAFKA_CFG_MAX_REQUEST_SIZE: The maximum size of a request in bytes. Default: 1048576
KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://brokerkafka:29092,PLAINTEXT_HOST://brokerkafka:9092
KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
KAFKA_INTER_BROKER_LISTENER_NAME=PLAINTEXT